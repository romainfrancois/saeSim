% Generated by roxygen2 (4.0.2): do not edit by hand
\name{sim_comp_pop}
\alias{sim_comp_N}
\alias{sim_comp_agg}
\alias{sim_comp_n}
\alias{sim_comp_pop}
\alias{sim_comp_popMean}
\alias{sim_comp_popVar}
\alias{sim_comp_sample}
\title{Calculation component}
\usage{
sim_comp_pop(simSetup, fun = calc_var(), by = "")

sim_comp_sample(simSetup, fun = calc_var(), by = "")

sim_comp_agg(simSetup, fun = calc_var(), by = "")

sim_comp_n(simSetup)

sim_comp_N(simSetup)

sim_comp_popMean(simSetup)

sim_comp_popVar(simSetup)
}
\arguments{
\item{fun}{a function, see details.}

\item{by}{variable names as character to split the data. Computed values will be constant within each group.}
}
\description{
One of the components which can be added to a simulation set-up. These functions can be used for adding new variables to the data. \code{sim_calc} is the generic interface to add a calculation component. Everything else are preconfigured components.
}
\details{
Potentially you can define a function for computation yourself. Take care that it only has one argument, named \code{dat}, and returns a \code{data.frame}.

\code{sim_comp_n} and \code{sim_comp_N} will add the sample and population size in each domain respectively. \code{sim_comp_popMean} and \code{sim_comp_popVar} the population mean and variance of the variable \code{y}.
}
\examples{
# Standard behavior
sim_base() \%>\% sim_gen_fe() \%>\% sim_comp_N()

# Custom data modifications
## Add predicted values of a linear model
library(saeSim)

comp_lm <- function(dat) {
  dat$linearPredictor <- predict(lm(y ~ x, data = dat))
  dat
}

sim_base() \%>\% sim_gen_fe() \%>\% sim_gen_e() \%>\% sim_resp(resp_eq(y = 100 + x + e)) \%>\% sim_comp_pop(comp_lm)
}
\seealso{
\code{\link{calc_var}}, \code{\link{sim_gen}}, \code{\link{sim_agg}}, \code{\link{sim_sample}}
}

