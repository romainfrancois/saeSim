% Generated by roxygen2 (4.0.1): do not edit by hand
\docType{methods}
\name{\%+\%}
\alias{\%+\%}
\alias{\%+\%,sim_base,sim_virtual-method}
\alias{\%+\%,sim_setup,sim_setup-method}
\alias{\%+\%,sim_setup,sim_virtual-method}
\title{Appand/Combine/Add simulation components to a set-up}
\usage{
e1 \%+\% e2

\S4method{\%+\%}{sim_setup,sim_setup}(e1, e2)

\S4method{\%+\%}{sim_setup,sim_virtual}(e1, e2)

\S4method{\%+\%}{sim_base,sim_virtual}(e1, e2)
}
\arguments{
\item{e1}{object on the left side.}

\item{e2}{object on the right side.}
}
\description{
Use this binary operator to add new simulation components to an existing set-up. The different methods are used internally and you don't have to care what they'll do, just add things up...
}
\details{
Adding up two simulation setups is possible. What ever options on the right side are set, they will override anything on the left (\code{R} and \code{simName} for example). Simulation components are just added to the set-up. You can add as much as you want of any component.
}
\examples{
setup <- sim_base_standard() \%+\% sim_gen_fe() \%+\% sim_gen_e() \%+\% sim_gen_re()
setup <- setup \%+\% sim_gen_rec() \%+\% sim_gen_ec()
anotherSetup <- sim_setup(sim_base_standard(), R = 5)
yesAnotherOne <- setup \%+\% anotherSetup
}

